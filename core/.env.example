# AURA Intelligence Environment Configuration
# Copy this file to .env and update with your values

# ===== Core Configuration =====
# Environment: development, staging, production, enterprise
AURA_ENVIRONMENT=production

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
AURA_LOG_LEVEL=INFO

# Service identification
AURA_SERVICE_NAME=aura-intelligence

# ===== API Keys =====
# OpenAI API Key (required for AI features)
OPENAI_API_KEY=sk-your-openai-api-key

# Anthropic API Key (optional, for Claude models)
ANTHROPIC_API_KEY=your-anthropic-api-key

# Google API Key (optional, for Gemini models)
GOOGLE_API_KEY=your-google-api-key

# Pinecone API Key (optional, for vector store)
PINECONE_API_KEY=your-pinecone-api-key
PINECONE_ENVIRONMENT=your-pinecone-environment

# ===== Security Configuration =====
# JWT Secret Key (required for authentication)
JWT_SECRET_KEY=your-super-secret-jwt-key-change-this

# Encryption Key (required for data encryption)
ENCRYPTION_KEY=your-32-byte-encryption-key-change-this

# OAuth2 Configuration (optional)
OAUTH2_CLIENT_ID=your-oauth2-client-id
OAUTH2_CLIENT_SECRET=your-oauth2-client-secret

# ===== Deployment Configuration =====
# Deployment mode: shadow, canary, production
DEPLOYMENT_MODE=shadow

# Container settings
CONTAINER_REGISTRY=docker.io
CONTAINER_IMAGE=aura-intelligence/core
CONTAINER_TAG=latest

# ===== Database Configuration =====
# PostgreSQL (default uses docker-compose service)
DATABASE_URL=postgresql://aura:aura_pass@postgres:5432/aura_db

# Redis (default uses docker-compose service)
REDIS_URL=redis://redis:6379/0

# RabbitMQ (default uses docker-compose service)
MESSAGE_QUEUE_URL=amqp://guest:guest@rabbitmq:5672/

# ===== Observability Configuration =====
# Prometheus
PROMETHEUS_PUSHGATEWAY_URL=http://pushgateway:9091

# Jaeger tracing
TRACING_ENDPOINT=http://jaeger:14268/api/traces
TRACING_SAMPLE_RATE=0.1

# Grafana
GRAFANA_PASSWORD=admin

# ===== Agent Configuration =====
# Number of agents
AURA_AGENT__AGENT_COUNT=7

# Enhancement level: basic, advanced, ultimate, consciousness
AURA_AGENT__ENHANCEMENT_LEVEL=ultimate

# Cycle interval in seconds
AURA_AGENT__CYCLE_INTERVAL=1.0

# ===== Memory Configuration =====
# Vector store type: chroma, pinecone, weaviate, faiss, qdrant
AURA_MEMORY__VECTOR_STORE_TYPE=qdrant

# Embedding model
AURA_MEMORY__EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2

# ===== Integration Configuration =====
# External API endpoints (comma-separated)
AURA_INTEGRATION__EXTERNAL_API_ENDPOINTS=

# Service discovery
AURA_INTEGRATION__ENABLE_SERVICE_DISCOVERY=false
AURA_INTEGRATION__CONSUL_URL=

# ===== Feature Flags =====
# Comma-separated list of enabled features
AURA_DEPLOYMENT__FEATURE_FLAGS=shadow_mode,metrics,tracing

# ===== Resource Limits =====
# Kubernetes-style resource limits
AURA_DEPLOYMENT__CPU_REQUEST=500m
AURA_DEPLOYMENT__CPU_LIMIT=2000m
AURA_DEPLOYMENT__MEMORY_REQUEST=512Mi
AURA_DEPLOYMENT__MEMORY_LIMIT=2Gi

# ===== Health Check Configuration =====
# Health check ports (if different from defaults)
AURA_OBSERVABILITY__HEALTH_CHECK_PORT=8080
AURA_OBSERVABILITY__METRICS_PORT=9090

# ===== Advanced Configuration =====
# These are typically not needed unless you're customizing the deployment

# Custom data directory (default: /data in container)
# AURA_DATA_DIR=/custom/data/path

# Custom logs directory (default: /logs in container)
# AURA_LOGS_DIR=/custom/logs/path

# Disable specific features
# AURA_OBSERVABILITY__ENABLE_METRICS=false
# AURA_OBSERVABILITY__ENABLE_TRACING=false
# AURA_SECURITY__ENABLE_AUTH=false

# Rate limiting
# AURA_API__RATE_LIMIT_REQUESTS_PER_MINUTE=60
# AURA_SECURITY__RATE_LIMIT_PER_MINUTE=60